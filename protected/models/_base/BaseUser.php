<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id_user
 * @property string $nama
 * @property string $username
 * @property string $password
 * @property integer $role
 * @property integer $id_guru
 *
 * @property Guru $idGuru
 */
abstract class BaseUser extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'user';
    }

    public static function representingColumn() {
        return 'nama';
    }

    public function rules() {
        return array(
            array('nama, username, password, role', 'required'),
            array('role, id_guru', 'numerical', 'integerOnly'=>true),
            array('nama, username, password', 'length', 'max'=>45),
            array('id_guru', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id_user, nama, username, password, role, id_guru', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'idGuru' => array(self::BELONGS_TO, 'Guru', 'id_guru'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id_user' => Yii::t('app', 'Id User'),
                'nama' => Yii::t('app', 'Nama'),
                'username' => Yii::t('app', 'Username'),
                'password' => Yii::t('app', 'Password'),
                'role' => Yii::t('app', 'Role'),
                'id_guru' => Yii::t('app', 'Id Guru'),
                'idGuru' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id_user', $this->id_user);
        $criteria->compare('nama', $this->nama, true);
        $criteria->compare('username', $this->username, true);
        $criteria->compare('password', $this->password, true);
        $criteria->compare('role', $this->role);
        $criteria->compare('id_guru', $this->id_guru);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}