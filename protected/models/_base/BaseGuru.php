<?php

/**
 * This is the model base class for the table "guru".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Guru".
 *
 * Columns in table "guru" available as properties of the model,
 * followed by relations of table "guru" available as properties of the model.
 *
 * @property integer $id_guru
 * @property string $nip
 * @property string $nama
 * @property string $status
 * @property string $tempat_lahir
 * @property string $tanggal_lahir
 * @property string $alamat
 * @property string $gelar_depan
 * @property string $gelar_belakang
 * @property string $foto
 *
 * @property Jadwal[] $jadwals
 * @property Kelas[] $kelases
 * @property User[] $users
 */
abstract class BaseGuru extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'guru';
    }

    public static function representingColumn() {
        return 'nip';
    }

    public function rules() {
        return array(
            array('nip, nama, status', 'required'),
            array('nip, gelar_depan, gelar_belakang', 'length', 'max'=>10),
            array('nama, status, tempat_lahir, foto', 'length', 'max'=>45),
            array('alamat', 'length', 'max'=>65),
            array('tanggal_lahir', 'safe'),
            array('tempat_lahir, tanggal_lahir, alamat, gelar_depan, gelar_belakang, foto', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id_guru, nip, nama, status, tempat_lahir, tanggal_lahir, alamat, gelar_depan, gelar_belakang, foto', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'jadwals' => array(self::HAS_MANY, 'Jadwal', 'id_guru'),
            'kelases' => array(self::HAS_MANY, 'Kelas', 'wali_kelas'),
            'users' => array(self::HAS_MANY, 'User', 'id_guru'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id_guru' => Yii::t('app', 'Id Guru'),
                'nip' => Yii::t('app', 'Nip'),
                'nama' => Yii::t('app', 'Nama'),
                'status' => Yii::t('app', 'Status'),
                'tempat_lahir' => Yii::t('app', 'Tempat Lahir'),
                'tanggal_lahir' => Yii::t('app', 'Tanggal Lahir'),
                'alamat' => Yii::t('app', 'Alamat'),
                'gelar_depan' => Yii::t('app', 'Gelar Depan'),
                'gelar_belakang' => Yii::t('app', 'Gelar Belakang'),
                'foto' => Yii::t('app', 'Foto'),
                'jadwals' => null,
                'kelases' => null,
                'users' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id_guru', $this->id_guru);
        $criteria->compare('nip', $this->nip, true);
        $criteria->compare('nama', $this->nama, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('tempat_lahir', $this->tempat_lahir, true);
        $criteria->compare('tanggal_lahir', $this->tanggal_lahir, true);
        $criteria->compare('alamat', $this->alamat, true);
        $criteria->compare('gelar_depan', $this->gelar_depan, true);
        $criteria->compare('gelar_belakang', $this->gelar_belakang, true);
        $criteria->compare('foto', $this->foto, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}